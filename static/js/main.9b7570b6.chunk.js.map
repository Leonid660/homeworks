{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h8/HW8.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","src","avatar","alt","angle","content","name","text","time","messageData","HW1","Affair","priorityClass","item","affair","priority","onClick","deleteAffairCallback","_id","button","Affairs","mappedAffairs","data","map","a","key","onAll","filter","active","onHigh","onMiddle","onLow","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","errorInput","Input","value","onChange","onBlur","disabled","count","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","trimmedName","currentTarget","trim","onEnter","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","onKeyPress","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","SuperEditableSpan","autoFocus","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Error404","SuperSelect","options","onChangeOption","mappedOptions","o","i","option","finalSelectClassName","select","SuperRadio","radio","arr","HW7","homeWorkReducer","action","newState","sort","b","payload","reverse","age","initialPeople","HW8","people","setPeople","finalPeople","p","Junior","JuniorPlus","PATH","Routes","path","exact","render","to","Header","header","link","activeClassName","block","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.9b7570b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Affairs_button__zvi53\",\"active\":\"Affairs_active__2SjGn\",\"affair\":\"Affairs_affair__2Uht_\",\"item\":\"Affairs_item__30sl5\",\"high\":\"Affairs_high__3V6MU\",\"middle\":\"Affairs_middle__2tF9p\",\"low\":\"Affairs_low__3VgeP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__1Z7iZ\",\"active\":\"Header_active__3lE_f\",\"block\":\"Header_block__31xGw\",\"header\":\"Header_header__xZp6M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__I2eKl\",\"avatar\":\"Message_avatar__2faSa\",\"content\":\"Message_content__hZKQZ\",\"angle\":\"Message_angle__bMQFP\",\"text\":\"Message_text__1wrTG\",\"name\":\"Message_name__4LFeB\",\"time\":\"Message_time__LhTwx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__1m3uj\",\"error\":\"Greeting_error__1326s\",\"input\":\"Greeting_input__WMzC8\",\"errorInput\":\"Greeting_errorInput__3Zh89\",\"button\":\"Greeting_button__2hty8\",\"count\":\"Greeting_count__3zHXA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__5Nzpq\",\"superInput\":\"SuperInputText_superInput__3DoaQ\",\"errorInput\":\"SuperInputText_errorInput__2SCTk\",\"error\":\"SuperInputText_error__3SXa5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3tSHL\",\"red\":\"SuperButton_red__3R5tD\",\"button\":\"SuperButton_button__3lmtX\",\"blink\":\"SuperButton_blink__3zTPa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3AuwF\",\"column\":\"HW4_column__VZyuI\",\"testSpanError\":\"HW4_testSpanError__3U3uY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3kUmP\",\"spanClassName\":\"SuperCheckbox_spanClassName__2Mfah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"SuperRadio_radio__gyX1G\",\"label\":\"SuperRadio_label__2fRga\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3SXUL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HW8_item__XwiE0\"};","import React from 'react'\nimport {messageDataType} from \"./HW1\";\nimport s from './Message.module.css'\n\n\nfunction Message(props: messageDataType) {\n    return (\n        <div className={s.message}>\n\n            <img src={props.avatar} alt={'avatar'} className={s.avatar}/>\n\n            <div className={s.angle}/>\n\n            <div className={s.content}>\n                <div className={s.name}>{props.name}</div>\n                <div className={s.text}>{props.message}</div>\n                <div className={s.time}>{props.time}</div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Message","import React from 'react'\nimport Message from \"./Message\";\n\nexport type messageDataType = {\n    avatar:string\n    name:string\n    message:string\n    time:string\n}\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            should work (должно работать)\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from './Affairs.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType\n    deleteAffairCallback: (_id:number)=>void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\n\n    const priorityClass = s.item + ' ' + s[props.affair.priority]\n\n    return (\n        <div className={s.affair}>\n            <div className={s.item}>{props.affair.name}</div>\n            <div className={priorityClass}>[{props.affair.priority}]</div>\n\n            <button onClick={deleteCallback} className={s.item + ' ' + s.button}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter:FilterType) => void\n    deleteAffairCallback: (_id:number)=>void\n    filter:FilterType\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    const onAll = s.button + ' ' + (props.filter === 'all'? s.active :'')\n    const onHigh = s.button + ' ' + (props.filter === 'high'? s.active :'')\n    const onMiddle = s.button + ' ' + (props.filter === 'middle'? s.active :'')\n    const onLow = s.button + ' ' + (props.filter === 'low'? s.active :'')\n\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll} className={onAll}>All</button>\n            <button onClick={setHigh} className={onHigh}>High</button>\n            <button onClick={setMiddle} className={onMiddle}>Middle</button>\n            <button onClick={setLow} className={onLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high'| 'middle'| 'low'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs\n    else return affairs.filter(a => a.priority === filter)\n}\nexport const deleteAffair = (affairs:Array<AffairType> , _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(a => a._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                filter={filter}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent,KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    onEnter:(e: KeyboardEvent<HTMLInputElement>) => void\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = s.error ? s.errorInput : s.Input// need to fix with (?:)\n\n    return (\n        <div>\n            <div>\n            <input\n                value={name}\n                onChange={setNameCallback}\n                className={inputClass}\n                // onKeyDown={onEnter}\n                onBlur={setNameCallback}\n            />\n                <span className={s.error}>{error}</span>\n            </div>\n\n            <button onClick={addUser} className={s.button} disabled={!name}>add</button>\n            <span className={s.count}>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState,KeyboardEvent} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        const trimmedName = e.currentTarget.value.trim()\n        if (trimmedName){\n            setName(trimmedName)\n            setError('')\n        }else {\n            name && setName('')\n            setError('name is require!')\n        }\n\n    }\n    const addUser = () => {\n        addUserCallback(name)\n        alert(`Hello ${name}!`) // need to fix\n    }\n\n    const onEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter' && name) {\n            addUser()\n            setName('')\n        }\n    }\n\n\n    const totalUsers = users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            onEnter={onEnter}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from 'uuid'\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        const user = {\n            _id:v1(),\n            name\n        }\n        setUsers([...users,user]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error?s.errorInput : s.superInput}${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button}${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false) // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true) // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        setValue(restoreState<string>('editable-span-value', ''))\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from '../../h6/HW6'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\nimport s from './SuperSelect.module.css'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,className,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <option className={s.option} key={0 + '-' + i} value={o}>{o}</option>)):[] // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    const finalSelectClassName = s.select + (\n        className\n            ?' ' + className\n            :''\n    )\n\n    return (\n        <select className={finalSelectClassName} onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from'./SuperRadio.module.css'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,className,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    const finalRadioClassName = s.radio\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\n        <label key={name + '-' + i} className={s.label}>\n            <input\n                className={finalRadioClassName}\n                type={'radio'}\n                name={name}\n                checked={o === value}\n                value={o}\n                onChange={onChangeCallback}\n                {...restProps}\n                // name, checked, value, onChange\n            />\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import React, {useState} from 'react'\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\n\nconst arr = ['x', 'y', 'z']\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[1])\n\n    return (\n        <div>\n\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={'radio'}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW7\n","import { UserType } from \"../HW8\"\n\ntype ActionType = {\n    type:'sort'\n    payload:'up'|'down'\n} |\n    {\n    type:'check'\n    payload:number\n}\n\n\n\nexport const homeWorkReducer = (state: UserType[], action: ActionType): UserType[] => { // need to fix any\n    switch (action.type) {\n        case 'sort': {\n           const newState = [...state].sort((a,b)=>{\n               if(a.name > b.name)return 1\n               else if (a.name > b.name )return -1\n               else return 0\n           })\n            return action.payload === 'up'? newState : newState.reverse()\n        }\n        case 'check': {\n            // need to fix\n            return state.filter(a => a.age >= action.payload)\n        }\n        default: return state\n    }\n}","import React, {useState} from 'react'\nimport {homeWorkReducer} from './bll/homeWorkReducer'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport s from'./HW8.module.css'\n\nexport type UserType = {\n    _id:number\n    name:string\n    age:number\n}\n\nconst initialPeople = [\n    {_id: 0, name: 'Кот', age: 3},\n    {_id: 1, name: 'Александр', age: 66},\n    {_id: 2, name: 'Коля', age: 16},\n    {_id: 3, name: 'Виктор', age: 44},\n    {_id: 4, name: 'Дмитрий', age: 40},\n    {_id: 5, name: 'Ирина', age: 55},\n]\n\nfunction HW8() {\n    const [people, setPeople] = useState<Array<UserType>>(initialPeople) // need to fix any\n\n    // need to fix any\n    const finalPeople = people.map((p: UserType) => (\n        <div key={p._id} className={s.item}>\n            <span>{p.name}</span>\n\n            {p.age}\n        </div>\n    ))\n\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'up'}))\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'down'}))\n    const check18 = () => setPeople(homeWorkReducer(initialPeople, {type: 'check', payload: 18}))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 8\n\n            {/*should work (должно работать)*/}\n            {finalPeople}\n\n            <div>\n                <SuperButton onClick={sortUp}>sort up</SuperButton>\n                <SuperButton onClick={sortDown}>sort down</SuperButton>\n                <SuperButton onClick={check18}>check 18</SuperButton>\n            </div>\n            <div>sort down</div>\n            check 18\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativePeople/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW8\n","import React from 'react'\nimport HW7 from '../../h7/HW7'\nimport HW8 from '../../h8/HW8'\n\n\nfunction Junior() {\n    return (\n        <div>\n            <HW7/>\n            <HW8/>\n        </div>\n    )\n}\n\nexport default Junior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\n\nfunction JuniorPlus() {\n    return (\n        <div>\n\n        </div>\n    )\n}\n\nexport default JuniorPlus\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport {Redirect, Route, Switch} from 'react-router-dom'\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from './pages/Error404';\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from './pages/JuniorPlus';\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus'\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport {PATH} from \"./Routes\";\nimport s from './Header.module.css'\nimport { NavLink } from 'react-router-dom';\n\nfunction Header() {\n    return (\n        <div className={s.header}>\n          <NavLink to={PATH.PRE_JUNIOR} className={s.link}  activeClassName={s.active}>pre-junior</NavLink>\n          <NavLink to={PATH.JUNIOR} className={s.link} activeClassName={s.active}>junior</NavLink>\n          <NavLink to={PATH.JUNIOR_PLUS} className={s.link} activeClassName={s.active}>junior+</NavLink>\n            <div className={s.block}/>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Routes from './Routes'\nimport {HashRouter} from \"react-router-dom\";\nimport Header from \"./Header\";\n\nfunction HW5() {\n    return (\n        <div>\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            {/*<div>react homeworks:</div>*/}\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n\n        </div>\n    );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}